{"version":3,"sources":["components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["CheckoutItemContainer","styled","div","_templateObject","ImageContainer","_templateObject2","TextContainer","span","_templateObject3","QuantityContainer","_templateObject4","displayName","RemoveButtonContainer","_templateObject5","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","_ref","cartItem","name","imageUrl","price","quantity","react_default","a","createElement","src","alt","onClick","CheckoutPageContainer","checkout_styles_templateObject","CheckoutHeaderContainer","checkout_styles_templateObject2","HeaderBlockContainer","checkout_styles_templateObject3","TotalContainer","checkout_styles_templateObject4","checkout_styles_templateObject5","__webpack_require__","d","__webpack_exports__","checkout_component_CheckoutPage","CheckoutPage","cartItems","total","map","checkout_item_component","key","id","mapStateToProps","createStructuredSelector","selectCartItems","selectCartTotal"],"mappings":"yiCAEO,IAAMA,EAAwBC,IAAOC,IAAVC,KAcrBC,EAAiBH,IAAOC,IAAVG,KAUdC,EAAgBL,IAAOM,KAAVC,KAQbC,EAAoBR,YAAOK,EAAPL,CAAHS,KAY9BD,EAAkBE,YAAc,oBAEzB,IAAMC,EAAwBX,IAAOC,IAAVW,KAKlCD,EAAsBD,YAAc,wBCpC7B,IA2BQG,cACb,KAPyB,SAAAC,GAAQ,MAAK,CACtCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,OAG3BH,CA3Ba,SAAAO,GAAkD,IAA/CC,EAA+CD,EAA/CC,SAAUN,EAAqCK,EAArCL,UAAWG,EAA0BE,EAA1BF,QAASC,EAAiBC,EAAjBD,WACnDG,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACEC,EAAAC,EAAAC,cAAC7B,EAAD,KACE2B,EAAAC,EAAAC,cAACzB,EAAD,KACEuB,EAAAC,EAAAC,cAAA,OAAKC,IAAKN,EAAUO,IAAI,UAE1BJ,EAAAC,EAAAC,cAACvB,EAAD,KAAgBiB,GAChBI,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAAA,OAAKG,QAAS,kBAAMZ,EAAWE,KAA/B,UACAK,EAAAC,EAAAC,cAAA,YAAOH,GACPC,EAAAC,EAAAC,cAAA,OAAKG,QAAS,kBAAMb,EAAQG,KAA5B,WAEFK,EAAAC,EAAAC,cAACvB,EAAD,KAAgBmB,GAChBE,EAAAC,EAAAC,cAACjB,EAAD,CAAuBoB,QAAS,kBAAMhB,EAAUM,KAAhD,+kCC7BC,IAAMW,EAAwBhC,IAAOC,IAAVgC,KAkBrBC,EAA0BlC,IAAOC,IAAVkC,KAQvBC,EAAuBpC,IAAOC,IAAVoC,KAiBpBC,EAAiBtC,IAAOC,IAAVsC,KAMKvC,IAAOC,IAAVuC,KCnD7BC,EAAAC,EAAAC,EAAA,iCAAAC,IAoBO,IAAMC,EAAe,SAAAzB,GAAA,IAAG0B,EAAH1B,EAAG0B,UAAWC,EAAd3B,EAAc2B,MAAd,OAC1BrB,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,wBAGHkB,EAAUE,IAAI,SAAA3B,GAAQ,OACrBK,EAAAC,EAAAC,cAACqB,EAAD,CAAcC,IAAK7B,EAAS8B,GAAI9B,SAAUA,MAE5CK,EAAAC,EAAAC,cAACU,EAAD,gBAAyBS,KAKvBK,EAAkBC,YAAyB,CAC/CP,UAAWQ,IACXP,MAAOQ,MAGM1C,sBAAQuC,EAARvC,CAAyBgC","file":"static/js/6.5abf35ce.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n\n  @media screen and (max-width: 800px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n\n  @media screen and (max-width: 800px) {\n    width: 22%;\n  }\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n  }\n\n  div {\n    cursor: pointer;\n  }\n`;\n\nQuantityContainer.displayName = 'QuantityContainer';\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n\nRemoveButtonContainer.displayName = 'RemoveButtonContainer';\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from '../../redux/cart/cart.actions';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from './checkout-item.styles';\n\nexport const CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt='item' />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutItem);\n","import styled from 'styled-components';\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 90%;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 22%\n\n    &:last-child {\n      width: 12%;\n    }\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 24px;\n  color: red;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../redux/cart/cart.selectors';\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from './checkout.styles';\n\nexport const CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    \n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}